// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    //Pass load through a DMux4way with sel as address
    DMux4Way(in=load, sel=address[0..1], a=outa, b=outb, c=outc, d=outd);
    
    //pass each of these 4 outputs through a RAM4k
    RAM4K(in=in, load=outa, out=outa1, address=address[2..13]);
    RAM4K(in=in, load=outb, out=outb1, address=address[2..13]);
    RAM4K(in=in, load=outc, out=outc1, address=address[2..13]);
    RAM4K(in=in, load=outd, out=outd1, address=address[2..13]);
    
    //Use a Mux4Way to combine the 4 outputs
    Mux4Way16(a=outa1, b=outb1, c=outc1, d=outd1, sel=address[0..1], out=out);      
}
